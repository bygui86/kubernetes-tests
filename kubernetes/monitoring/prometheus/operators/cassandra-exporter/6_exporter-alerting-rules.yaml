apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: cassandra
  labels:
    # app: cassandra
    group: db
    # prometheus: observability
    # prometheus: kube-prometheus
    app: prometheus-operator
    # role: alert-rules
    release: mon
spec:
  groups:
  - name: cassandra.rules
    rules:
    - alert: Cassandra_One_Node_Lost
      expr: kube_statefulset_replicas{namespace="default",statefulset="cassandra"} - kube_statefulset_status_replicas{namespace="default",statefulset="cassandra"} == 1
      for: 2m
      labels:
        serviceLevel: objective
        severity: interrupt
        team: infra
        type: functional
        
      annotations:
        summary: "There is one instance down on Cassandra cluster."
        description: "There is one instance down on Cassandra cluster."
    - alert: Cassandra_Two_Or_More_Nodes_Lost
      expr: kube_statefulset_replicas{namespace="default",statefulset="cassandra"} - kube_statefulset_status_replicas{namespace="default",statefulset="cassandra"} > 1
      for: 2m
      labels:
        serviceLevel: objective
        severity: page
        team: infra
        type: functional
        
      annotations:
        summary: "There is two or more nodes down on Cassandra cluster."
        description: "There is two or more nodes down on Cassandra cluster."
    - alert: Cassandra_Pod_Memory_Warning
      expr: max(container_memory_usage_bytes{namespace="default",pod_name=~"cassandra-\\d+", container_name="cassandra"}) by (container_name) / min(kube_pod_container_resource_limits_memory_bytes{namespace="default", container="cassandra"}) by (container) * 100 > 65
      for: 1m
      labels:
        serviceLevel: objective
        severity: interrupt
        team: infra
        type: functional
        
      annotations:
        summary: "Cassandra memory limit warning."
        description: "Cassandra memory reached {{$value}}% on default. You need to upgrade its memory to avoid Cassandra pod issues."
    - alert: Cassandra_Pod_Memory_Critical
      expr: max(container_memory_usage_bytes{namespace="default",pod_name=~"cassandra-\\d+", container_name=~"cassandra"}) by (container_name) / min(kube_pod_container_resource_limits_memory_bytes{namespace="default", container="cassandra"}) by (container) * 100 > 80
      for: 1m
      labels:
        serviceLevel: objective
        severity: page
        team: infra
        type: functional
        
      annotations:
        summary: "Cassandra memory limit critical."
        description: "Cassandra memory reached {{$value}}% on default. You need to upgrade its memory as soon as possible to avoid Cassandra OOM."
    - alert: Cassandra_JMX_Memory_Warning
      expr: max(cassandra_stats{cluster="default",datacenter="DC1",name="java:lang:memory:heapmemoryusage:used"}) by (container_name) / max(cassandra_stats{cluster="default",datacenter="DC1",name="java:lang:memory:heapmemoryusage:committed"}) by (container_name) * 100 > 85
      for: 10m
      labels:
        serviceLevel: objective
        severity: interrupt
        team: infra
        type: functional
        
      annotations:
        summary: "Cassandra JMX memory usage warning."
        description: "Cassandra JMX memory reached {{$value}}% on default. You need to upgrade its memory to avoid Cassandra pod issues."
    - alert: Cassandra_JMX_Memory_Critical
      expr: max(cassandra_stats{cluster="default",datacenter="DC1",name="java:lang:memory:heapmemoryusage:used"}) by (container_name) / max(cassandra_stats{cluster="default",datacenter="DC1",name="java:lang:memory:heapmemoryusage:committed"}) by (container_name) * 100 > 90
      for: 10m
      labels:
        serviceLevel: objective
        severity: page
        team: infra
        type: functional
        
      annotations:
        summary: "Cassandra JMX memory usage critical."
        description: "Cassandra JMX memory reached {{$value}}% on default. You need to upgrade its memory as soon as possible to avoid Cassandra OOM."
  
    - alert: Cassandra_Exporter_JVM_Usage_Warning
      expr: (sum(cassandra_stats{cluster="default",datacenter="DC1",name=~"java:lang:memory:.+:used"}) / sum(cassandra_stats{cluster="default",datacenter="DC1",name=~"java:lang:memory:.+:max"})) * 100 > 80
      for: 15m
      labels:
        serviceLevel: objective
        severity: interrupt
        team: infra
        type: functional
        
      annotations:
        summary: "Cassandra exporter JVM warning usage."
        description: "Cassandra exporter JVM percentage usage {{$value}}% on default. You need to upgrade its memory."
    - alert: Cassandra_Exporter_JVM_Usage_Critical
      expr: (sum(cassandra_stats{cluster="default",datacenter="DC1",name=~"java:lang:memory:.+:used"}) / sum(cassandra_stats{cluster="default",datacenter="DC1",name=~"java:lang:memory:.+:max"})) * 100 > 90
      for: 20m
      labels:
        serviceLevel: objective
        severity: page
        team: infra
        type: functional
        
      annotations:
        summary: "Cassandra exporter JVM critical usage."
        description: "Cassandra exporter JVM percentage usage {{$value}}% on default. You need to upgrade its memory as soon as possible."
    - alert: Cassandra_Exporter_Memory_Warning
      expr: max(container_memory_usage_bytes{namespace="default",pod_name=~"cassandra-\\d+", container_name="cassandra-exporter"}) by (container_name) / min(kube_pod_container_resource_limits_memory_bytes{namespace="default", container="cassandra-exporter"}) by (container) * 100 > 65
      for: 1m
      labels:
        serviceLevel: objective
        severity: interrupt
        team: infra
        type: functional
        
      annotations:
        summary: "Cassandra exporter memory limit warning."
        description: "Cassandra exporter memory reached {{$value}}% on default. You need to upgrade its memory to avoid Cassandra pod issues."
    - alert: Cassandra_Exporter_Memory_Critical
      expr: max(container_memory_usage_bytes{namespace="default",pod_name=~"cassandra-\\d+", container_name="cassandra-exporter"}) by (container_name) / min(kube_pod_container_resource_limits_memory_bytes{namespace="default", container="cassandra-exporter"}) by (container) * 100 > 80
      for: 1m
      labels:
        serviceLevel: objective
        severity: page
        team: infra
        type: functional
        
      annotations:
        summary: "Cassandra exporter memory limit critical."
        description: "Cassandra exporter memory reached {{$value}}% on default. You need to upgrade its memory as soon as possible to avoid Cassandra pod issues."
    - alert: Cassandra_Exporter_Timeout
      expr: sum(cassandra_stats{cluster="default",datacenter="DC1",name="org:apache:cassandra:metrics:connection:totaltimeouts:oneminuterate"}) by (name) > 0.1
      for: 10m
      labels:
        serviceLevel: objective
        severity: page
        team: infra
        type: functional
        
      annotations:
        summary: "Cassandra exporter too many timeouts."
        description: "Cassandra exporter reports too many timeouts on default: {{$value}}%. You have too many network troubles."
